<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>